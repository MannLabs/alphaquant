# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"RunConfigOfRunPipeline": "01_diff_analysis_manager.ipynb",
         "run_pipeline": "01_diff_analysis_manager.ipynb",
         "run_analysis_singleprocess": "01_diff_analysis_manager.ipynb",
         "run_analysis_multiprocess": "01_diff_analysis_manager.ipynb",
         "min_num_ions": "01_diff_analysis_manager.ipynb",
         "use_iontree_if_possible": "01_diff_analysis_manager.ipynb",
         "annotation_file": "01_diff_analysis_manager.ipynb",
         "write_ptm_mapped_input": "01_diff_analysis_manager.ipynb",
         "check_input_consistency": "01_diff_analysis_manager.ipynb",
         "get_unnormed_df_condpair": "01_diff_analysis_manager.ipynb",
         "get_per_condition_dataframes": "01_diff_analysis_manager.ipynb",
         "get_minrep_for_cond": "01_diff_analysis_manager.ipynb",
         "format_condpair_input": "01_diff_analysis_manager.ipynb",
         "analyze_condpair": "01_diff_analysis_manager.ipynb",
         "QuantifiedResult": "01_diff_analysis_manager.ipynb",
         "update_quantified_proteins_w_tree_results": "01_diff_analysis_manager.ipynb",
         "add_fdr": "01_diff_analysis_manager.ipynb",
         "get_results_df": "01_diff_analysis_manager.ipynb",
         "write_out_normed_df": "01_diff_analysis_manager.ipynb",
         "read_tables": "01_diff_analysis_manager.ipynb",
         "get_normfacts_withincond": "02_normalization.ipynb",
         "apply_sampleshifts": "02_normalization.ipynb",
         "get_bestmatch_pair": "02_normalization.ipynb",
         "create_distance_matrix": "02_normalization.ipynb",
         "calc_distance": "02_normalization.ipynb",
         "update_distance_matrix": "02_normalization.ipynb",
         "get_fcdistrib": "02_normalization.ipynb",
         "determine_anchor_and_shift_sample": "02_normalization.ipynb",
         "shift_samples": "02_normalization.ipynb",
         "get_total_shift": "02_normalization.ipynb",
         "merge_distribs": "02_normalization.ipynb",
         "determine_mode_iteratively": "02_normalization.ipynb",
         "find_nearest": "10_classify_ions.ipynb",
         "mode_normalization": "02_normalization.ipynb",
         "get_betweencond_shift": "02_normalization.ipynb",
         "normalize_if_specified": "02_normalization.ipynb",
         "get_normalized_dfs_between_conditions": "02_normalization.ipynb",
         "normalize_within_cond": "02_normalization.ipynb",
         "prepare_tables_and_get_betweencond_shift": "02_normalization.ipynb",
         "read_specified_protein_subset_if_given": "02_normalization.ipynb",
         "get_protein_subset_from_protein_list": "02_normalization.ipynb",
         "prepare_table_for_betweencond_shift": "02_normalization.ipynb",
         "filter_to_protein_subset": "02_normalization.ipynb",
         "test_if_proteingroup_is_in_subset": "02_normalization.ipynb",
         "drop_nas_if_possible": "02_normalization.ipynb",
         "plot_withincond_normalization": "02_normalization.ipynb",
         "use_benchmark_prenormed_file": "02_normalization.ipynb",
         "ConditionBackgrounds": "03_background_distributions.ipynb",
         "BackGroundDistribution": "03_background_distributions.ipynb",
         "SubtractedBackgrounds": "03_background_distributions.ipynb",
         "subtract_distribs": "03_background_distributions.ipynb",
         "get_joined": "03_background_distributions.ipynb",
         "get_subtracted_bg": "03_background_distributions.ipynb",
         "get_doublediff_bg": "03_background_distributions.ipynb",
         "get_z_from_p_empirical": "06_diffquant_utils.ipynb",
         "get_normed_freqs": "03_background_distributions.ipynb",
         "get_freq_from_cumul": "03_background_distributions.ipynb",
         "transform_cumulative_into_fc2count": "03_background_distributions.ipynb",
         "get_cumul_from_freq": "03_background_distributions.ipynb",
         "DifferentialIon": "04_diff_analysis.ipynb",
         "calc_diffreg_peptide": "04_diff_analysis.ipynb",
         "calc_outlier_scaling_factor": "04_diff_analysis.ipynb",
         "DifferentialProtein": "04_diff_analysis.ipynb",
         "evaluate_protein_expression": "04_diff_analysis.ipynb",
         "select_robust_if_many_ions": "04_diff_analysis.ipynb",
         "calc_pseudo_intensities": "04_diff_analysis.ipynb",
         "select_representative_DIA_fragions": "04_diff_analysis.ipynb",
         "group_ions_by_precursor": "04_diff_analysis.ipynb",
         "AlphaPeptColorMap": "05_visualizations.ipynb",
         "IonPlotColorGetter": "05_visualizations.ipynb",
         "plot_pvals": "05_visualizations.ipynb",
         "plot_bgdist": "05_visualizations.ipynb",
         "tranform_fc2count_to_fc_space": "05_visualizations.ipynb",
         "plot_withincond_fcs": "05_visualizations.ipynb",
         "get_iontree_img": "05_visualizations.ipynb",
         "get_nodename": "05_visualizations.ipynb",
         "plot_betweencond_fcs": "05_visualizations.ipynb",
         "scatter_df_columns": "05_visualizations.ipynb",
         "plot_cumhist_dfcols": "05_visualizations.ipynb",
         "compare_peptid_protein_overlaps": "05_visualizations.ipynb",
         "plot_fold_change": "05_visualizations.ipynb",
         "get_volcanoplot_ckg": "05_visualizations.ipynb",
         "volcano_plot": "05_visualizations.ipynb",
         "get_melted_protein_ion_intensity_table": "05_visualizations.ipynb",
         "get_betweencond_fcs_table": "05_visualizations.ipynb",
         "beeswarm_ion_plot": "05_visualizations.ipynb",
         "foldchange_ion_plot": "05_visualizations.ipynb",
         "get_normalization_overview_heatmap": "05_visualizations.ipynb",
         "get_protein_regulation_heatmap": "05_visualizations.ipynb",
         "get_heatmapplot_ckg": "05_visualizations.ipynb",
         "compare_direction": "05_visualizations.ipynb",
         "compare_correlation": "05_visualizations.ipynb",
         "get_condensed_distance_matrix": "05_visualizations.ipynb",
         "clustersort_numerical_arrays": "05_visualizations.ipynb",
         "get_clustered_dataframe": "05_visualizations.ipynb",
         "get_sample_overview_dataframe": "05_visualizations.ipynb",
         "get_diffresult_dataframe": "05_visualizations.ipynb",
         "get_diffresult_dict_ckg_format": "05_visualizations.ipynb",
         "subset_normed_peptides_df_to_condition": "05_visualizations.ipynb",
         "get_normed_peptides_dataframe": "05_visualizations.ipynb",
         "initialize_sample2cond": "05_visualizations.ipynb",
         "plot_volcano_plotly": "05_visualizations.ipynb",
         "plot_withincond_fcs_plotly": "05_visualizations.ipynb",
         "plot_betweencond_fcs_plotly": "05_visualizations.ipynb",
         "beeswarm_ion_plot_plotly": "05_visualizations.ipynb",
         "foldchange_ion_plot_plotly": "05_visualizations.ipynb",
         "get_color2ions": "05_visualizations.ipynb",
         "convert_to_plotly_color_format": "05_visualizations.ipynb",
         "IonFoldChangeCalculator": "05_visualizations.ipynb",
         "IonFoldChangePlotter": "05_visualizations.ipynb",
         "make_mz_fc_boxplot": "05_visualizations.ipynb",
         "assign_mz_cathegory": "05_visualizations.ipynb",
         "plot_fc_histogram_ml_filtered": "05_visualizations.ipynb",
         "plot_log_loss_score": "05_visualizations.ipynb",
         "scatter_ml_regression_perturbation_aware": "05_visualizations.ipynb",
         "plot_perturbation_histogram": "05_visualizations.ipynb",
         "plot_perturbed_unperturbed_fcs": "05_visualizations.ipynb",
         "plot_ml_fc_histograms": "05_visualizations.ipynb",
         "plot_fc_intensity_scatter": "05_visualizations.ipynb",
         "plot_violin_plots_log2fcs": "05_visualizations.ipynb",
         "plot_beeswarm_plot_log2fcs": "05_visualizations.ipynb",
         "get_longformat_df": "05_visualizations.ipynb",
         "plot_feature_importances": "05_visualizations.ipynb",
         "filter_sort_top_n": "05_visualizations.ipynb",
         "visualize_gaussian_mixture_fit": "05_visualizations.ipynb",
         "visualize_gaussian_nomix_subfit": "05_visualizations.ipynb",
         "visualize_filtered_non_filtered_precursors": "05_visualizations.ipynb",
         "plot_fcs_node": "05_visualizations.ipynb",
         "plot_predictability_roc_curve": "05_visualizations.ipynb",
         "plot_predictability_precision_recall_curve": "05_visualizations.ipynb",
         "plot_outlier_fraction": "05_visualizations.ipynb",
         "get_true_false_to_predscores": "05_visualizations.ipynb",
         "plot_true_false_fcs_of_test_set": "05_visualizations.ipynb",
         "plot_fc_dist_of_test_set": "05_visualizations.ipynb",
         "plot_roc_curve": "05_visualizations.ipynb",
         "plot_precision_recall_curve": "05_visualizations.ipynb",
         "compare_fcs_unperturbed_vs_perturbed_and_clustered": "05_visualizations.ipynb",
         "CondpairQuantificationInfo": "05_visualizations.ipynb",
         "ProteinIntensityDataFrameGetter": "05_visualizations.ipynb",
         "INTABLE_CONFIG": "06_diffquant_utils.ipynb",
         "get_samples_used_from_samplemap_file": "06_diffquant_utils.ipynb",
         "get_samples_used_from_samplemap_df": "06_diffquant_utils.ipynb",
         "filter_df_to_minrep": "06_diffquant_utils.ipynb",
         "get_condpairname": "06_diffquant_utils.ipynb",
         "get_quality_score_column": "06_diffquant_utils.ipynb",
         "make_dir_w_existcheck": "06_diffquant_utils.ipynb",
         "get_results_plot_dir_condpair": "06_diffquant_utils.ipynb",
         "get_middle_elem": "06_diffquant_utils.ipynb",
         "get_nonna_array": "06_diffquant_utils.ipynb",
         "get_non_nas_from_pd_df": "06_diffquant_utils.ipynb",
         "get_ionints_from_pd_df": "06_diffquant_utils.ipynb",
         "invert_dictionary": "06_diffquant_utils.ipynb",
         "get_levelnodes_from_nodeslist": "06_diffquant_utils.ipynb",
         "count_fraction_outliers_from_expected_fc": "06_diffquant_utils.ipynb",
         "find_node_parent_at_level": "06_diffquant_utils.ipynb",
         "check_if_node_is_included": "06_diffquant_utils.ipynb",
         "write_chunk_to_file": "06_diffquant_utils.ipynb",
         "set_logger": "06_diffquant_utils.ipynb",
         "load_method_parameters": "06_diffquant_utils.ipynb",
         "store_method_parameters": "06_diffquant_utils.ipynb",
         "save_dict_as_yaml": "06_diffquant_utils.ipynb",
         "get_methods_dict_from_local_vars": "06_diffquant_utils.ipynb",
         "add_ml_input_file_location": "06_diffquant_utils.ipynb",
         "get_path_to_unformatted_file": "06_diffquant_utils.ipynb",
         "get_relevant_columns": "06_diffquant_utils.ipynb",
         "get_relevant_columns_config_dict": "06_diffquant_utils.ipynb",
         "get_config_columns": "06_diffquant_utils.ipynb",
         "load_config": "06_diffquant_utils.ipynb",
         "get_type2relevant_cols": "06_diffquant_utils.ipynb",
         "filter_input": "06_diffquant_utils.ipynb",
         "merge_protein_and_ion_cols": "06_diffquant_utils.ipynb",
         "merge_protein_cols_and_ion_dict": "06_diffquant_utils.ipynb",
         "get_quantitative_columns": "06_diffquant_utils.ipynb",
         "get_ionname_columns": "06_diffquant_utils.ipynb",
         "adapt_headers_on_extended_df": "06_diffquant_utils.ipynb",
         "split_extend_df": "06_diffquant_utils.ipynb",
         "add_merged_ionnames": "06_diffquant_utils.ipynb",
         "reformat_and_write_longtable_according_to_config_new": "06_diffquant_utils.ipynb",
         "adapt_subtable": "06_diffquant_utils.ipynb",
         "reshape_input_df": "06_diffquant_utils.ipynb",
         "process_with_dask": "06_diffquant_utils.ipynb",
         "sort_and_add_columns": "06_diffquant_utils.ipynb",
         "reformat_and_write_wideformat_table": "06_diffquant_utils.ipynb",
         "read_condpair_tree": "06_diffquant_utils.ipynb",
         "check_for_processed_runs_in_results_folder": "06_diffquant_utils.ipynb",
         "import_data": "06_diffquant_utils.ipynb",
         "expand_samples_subset": "06_diffquant_utils.ipynb",
         "get_input_type_and_config_dict": "06_diffquant_utils.ipynb",
         "import_config_dict": "06_diffquant_utils.ipynb",
         "get_samplenames": "06_diffquant_utils.ipynb",
         "load_samplemap": "06_diffquant_utils.ipynb",
         "prepare_loaded_tables": "06_diffquant_utils.ipynb",
         "AcquistionDataFrameHandler": "06_diffquant_utils.ipynb",
         "merge_acquisition_df_parameter_df": "06_diffquant_utils.ipynb",
         "ModifiedPeptide": "07_ptmsite_mapping.ipynb",
         "merge_samecond_modpeps": "07_ptmsite_mapping.ipynb",
         "scale_site_idxs_to_protein": "07_ptmsite_mapping.ipynb",
         "get_num_sites": "07_ptmsite_mapping.ipynb",
         "group_by_nummods_posv": "07_ptmsite_mapping.ipynb",
         "condense_ions": "07_ptmsite_mapping.ipynb",
         "encode_probabilities": "07_ptmsite_mapping.ipynb",
         "retrieve_relative_positions_diann": "07_ptmsite_mapping.ipynb",
         "retrieve_probabilities_diann": "07_ptmsite_mapping.ipynb",
         "cluster_ions": "07_ptmsite_mapping.ipynb",
         "cluster_ions_pairwise": "07_ptmsite_mapping.ipynb",
         "compare_ion_similarities": "07_ptmsite_mapping.ipynb",
         "get_condensed_matrix": "07_ptmsite_mapping.ipynb",
         "read_df_spectronaut_reduce_cols": "07_ptmsite_mapping.ipynb",
         "read_df_diann_reduce_cols": "07_ptmsite_mapping.ipynb",
         "read_df_reduce_cols": "07_ptmsite_mapping.ipynb",
         "get_relevant_cols_spectronaut": "07_ptmsite_mapping.ipynb",
         "get_relevant_cols_diann": "07_ptmsite_mapping.ipynb",
         "get_idmap_column": "07_ptmsite_mapping.ipynb",
         "get_site_prob_overview": "07_ptmsite_mapping.ipynb",
         "add_ptmsite_infos_spectronaut": "07_ptmsite_mapping.ipynb",
         "add_ptm_precursor_names_spectronaut": "07_ptmsite_mapping.ipynb",
         "filter_input_table": "07_ptmsite_mapping.ipynb",
         "headers_dicts": "07_ptmsite_mapping.ipynb",
         "get_ptmpos_header": "07_ptmsite_mapping.ipynb",
         "get_ptmprob_header": "07_ptmsite_mapping.ipynb",
         "get_uniprot_path": "07_ptmsite_mapping.ipynb",
         "get_swissprot_path": "07_ptmsite_mapping.ipynb",
         "get_path_to_database": "07_ptmsite_mapping.ipynb",
         "assign_protein": "07_ptmsite_mapping.ipynb",
         "assign_dataset_inmemory": "07_ptmsite_mapping.ipynb",
         "sequence_file": "07_ptmsite_mapping.ipynb",
         "assign_dataset_chunkwise": "07_ptmsite_mapping.ipynb",
         "clean_up_previous_processings": "07_ptmsite_mapping.ipynb",
         "assign_dataset": "07_ptmsite_mapping.ipynb",
         "merge_ptmsite_mappings_write_table": "07_ptmsite_mapping.ipynb",
         "add_ptmsite_info_to_subtable": "07_ptmsite_mapping.ipynb",
         "get_ptmid_mappings": "07_ptmsite_mapping.ipynb",
         "initialize_ptmsite_df": "07_ptmsite_mapping.ipynb",
         "detect_site_occupancy_change": "07_ptmsite_mapping.ipynb",
         "check_site_occupancy_changes_all_diffresults": "07_ptmsite_mapping.ipynb",
         "calc_per_peppair_z_and_fcfc": "08_doublediff_analysis.ipynb",
         "calculate_pairpair_overlap_factor": "08_doublediff_analysis.ipynb",
         "calculate_scaled_pval": "08_doublediff_analysis.ipynb",
         "calc_doublediff_score": "08_doublediff_analysis.ipynb",
         "get_indexes_present_in_both_ions": "08_doublediff_analysis.ipynb",
         "find_fold_change_clusters": "09_cluster_ions.ipynb",
         "exchange_cluster_idxs": "09_cluster_ions.ipynb",
         "decide_cluster_order": "09_cluster_ions.ipynb",
         "get_score_mapping_consistency_score": "09_cluster_ions.ipynb",
         "get_score_mapping_num_clustelems": "09_cluster_ions.ipynb",
         "reformat_to_childnode2clust": "09_cluster_ions.ipynb",
         "order_by_score": "09_cluster_ions.ipynb",
         "get_fcs_ions": "09_cluster_ions.ipynb",
         "evaluate_distance": "09_cluster_ions.ipynb",
         "create_hierarchical_ion_grouping": "09_cluster_ions.ipynb",
         "get_ionlist": "09_cluster_ions.ipynb",
         "get_leafs": "09_cluster_ions.ipynb",
         "exclude_node": "09_cluster_ions.ipynb",
         "cluster_along_specified_levels": "09_cluster_ions.ipynb",
         "get_mainclust_leaves": "09_cluster_ions.ipynb",
         "annotate_mainclust_leaves": "09_cluster_ions.ipynb",
         "assign_cluster_number": "09_cluster_ions.ipynb",
         "assign_vals_to_node": "09_cluster_ions.ipynb",
         "get_feature_numpy_array_from_nodes": "09_cluster_ions.ipynb",
         "filter_fewpeps_per_protein": "09_cluster_ions.ipynb",
         "set_bounds_for_p_if_too_extreme": "09_cluster_ions.ipynb",
         "get_median_peptides": "09_cluster_ions.ipynb",
         "select_predscore_with_minimum_absval": "09_cluster_ions.ipynb",
         "get_diffresults_from_clust_root_node": "09_cluster_ions.ipynb",
         "get_scored_clusterselected_ions": "09_cluster_ions.ipynb",
         "assign_fcs_to_base_ions": "09_cluster_ions.ipynb",
         "update_nodes_w_ml_score": "09_cluster_ions.ipynb",
         "re_order_depending_on_predscore": "09_cluster_ions.ipynb",
         "re_order_clusters_by_predscore": "09_cluster_ions.ipynb",
         "TypeFilter": "09_cluster_ions.ipynb",
         "globally_initialized_typefilter": "09_cluster_ions.ipynb",
         "NodeProperties": "09_cluster_ions.ipynb",
         "regex_frgions_only": "09_cluster_ions.ipynb",
         "regex_frgions_isotopes": "09_cluster_ions.ipynb",
         "export_roots_to_json": "09_cluster_ions.ipynb",
         "collect_node_parameters": "10_classify_ions.ipynb",
         "get_param2val": "10_classify_ions.ipynb",
         "get_dataframe": "10_classify_ions.ipynb",
         "calc_cluster_stats": "10_classify_ions.ipynb",
         "calc_variance_for_node": "10_classify_ions.ipynb",
         "get_positive_negative_samples": "10_classify_ions.ipynb",
         "get_tp_fp_nodes": "10_classify_ions.ipynb",
         "get_node2fc": "10_classify_ions.ipynb",
         "generate_ml_input": "10_classify_ions.ipynb",
         "ml_filter_and_plot_fcs": "10_classify_ions.ipynb",
         "get_ion2classification": "10_classify_ions.ipynb",
         "balance_classes": "10_classify_ions.ipynb",
         "load_feature_df": "10_classify_ions.ipynb",
         "plot_precision_recall": "10_classify_ions.ipynb",
         "get_precursor2fc": "10_classify_ions.ipynb",
         "get_nodes_of_type": "10_classify_ions.ipynb",
         "get_fc_normalized_nodes": "10_classify_ions.ipynb",
         "get_intersect_sn_diann_precursors": "10_classify_ions.ipynb",
         "replace_nans_feature_dependent": "10_classify_ions.ipynb",
         "generate_ml_input_regression": "10_classify_ions.ipynb",
         "do_linear_regression": "10_classify_ions.ipynb",
         "do_random_forest_regression": "10_classify_ions.ipynb",
         "scale_input": "10_classify_ions.ipynb",
         "scale_input_minmax": "10_classify_ions.ipynb",
         "print_good_predicitions": "10_classify_ions.ipynb",
         "get_indices_for_cross_predict": "10_classify_ions.ipynb",
         "get_trained_predictor_and_predicted_trainset": "10_classify_ions.ipynb",
         "predict_remaining_dataset": "10_classify_ions.ipynb",
         "find_mean_and_cutoffs": "10_classify_ions.ipynb",
         "fit_gaussian_to_dist_around_mode": "10_classify_ions.ipynb",
         "gauss": "10_classify_ions.ipynb",
         "gaussian": "10_classify_ions.ipynb",
         "fit_gaussian_to_subdist": "10_classify_ions.ipynb",
         "annotate_precursor_nodes": "10_classify_ions.ipynb",
         "balance_small_and_strong_fcs": "10_classify_ions.ipynb",
         "random_forest_iterative_cross_predict": "10_classify_ions.ipynb",
         "get_balance_excluded_subset": "10_classify_ions.ipynb",
         "calculate_log_loss_scores_for_prediction": "10_classify_ions.ipynb",
         "assign_predictability_scores": "10_classify_ions.ipynb",
         "get_acquisition_info_df": "10_classify_ions.ipynb",
         "get_node_level_from_dfhandler": "10_classify_ions.ipynb",
         "add_quality_scores_to_node": "10_classify_ions.ipynb",
         "test_fc_name_mapping": "10_classify_ions.ipynb",
         "get_tps_fps": "12_benchmarking.ipynb",
         "annotate_dataframe": "12_benchmarking.ipynb",
         "compare_to_reference": "12_benchmarking.ipynb",
         "compare_normalization": "12_benchmarking.ipynb",
         "compare_significant_proteins": "12_benchmarking.ipynb",
         "print_nonref_hits": "12_benchmarking.ipynb",
         "test_run_pipeline": "12_benchmarking.ipynb",
         "generate_random_input": "12_benchmarking.ipynb",
         "generate_peptide_list": "12_benchmarking.ipynb",
         "generate_protein_list": "12_benchmarking.ipynb",
         "annotate_fcs_to_wideformat_table": "12_benchmarking.ipynb",
         "prepare_mq_table": "12_benchmarking.ipynb",
         "cluster_selected_proteins": "12_benchmarking.ipynb",
         "create_background_dists_from_prepared_files": "12_benchmarking.ipynb",
         "get_c1_c2_dfs": "12_benchmarking.ipynb",
         "load_real_example_ions": "12_benchmarking.ipynb",
         "get_filtered_protnodes": "12_benchmarking.ipynb",
         "filter_check_protnode": "12_benchmarking.ipynb",
         "get_subset_of_diffions": "12_benchmarking.ipynb",
         "add_perturbations_to_proteins": "12_benchmarking.ipynb",
         "group_level_nodes_by_parents": "12_benchmarking.ipynb",
         "get_filtered_intensity_df": "12_benchmarking.ipynb",
         "get_perturbed_intensity_df": "12_benchmarking.ipynb",
         "run_perturbation_test": "12_benchmarking.ipynb",
         "compare_cluster_to_benchmarks": "12_benchmarking.ipynb",
         "evaluate_per_level": "12_benchmarking.ipynb",
         "count_correctly_excluded": "12_benchmarking.ipynb",
         "eval_clustered_results": "12_benchmarking.ipynb",
         "read_and_filter_output_table_to_single_organism": "12_benchmarking.ipynb",
         "get_peptides_set": "12_benchmarking.ipynb",
         "retrieve_all_peptides_from_fasta_and_save": "12_benchmarking.ipynb",
         "get_peptides_from_protein_sequence": "12_benchmarking.ipynb",
         "get_m_replaced_peps": "12_benchmarking.ipynb",
         "spectronaut_filtering": "12_benchmarking.ipynb",
         "diann_filtering": "12_benchmarking.ipynb",
         "decide_filter_function": "12_benchmarking.ipynb",
         "compare_aq_to_reference": "12_benchmarking.ipynb",
         "shift_to_expected_fc": "12_benchmarking.ipynb",
         "get_rough_tpr_cutoff": "12_benchmarking.ipynb",
         "get_top_percentile_node_df": "12_benchmarking.ipynb",
         "filter_top_qualityscore_percentiles": "12_benchmarking.ipynb",
         "get_top_percentile_peptides": "12_benchmarking.ipynb",
         "compare_aq_w_method": "12_benchmarking.ipynb",
         "import_input_file_in_specified_format": "12_benchmarking.ipynb",
         "get_original_input_df": "12_benchmarking.ipynb",
         "correct_fcs_to_expected": "12_benchmarking.ipynb",
         "get_node_df": "12_benchmarking.ipynb",
         "generate_precursor_nodes_from_protein_nodes": "12_benchmarking.ipynb",
         "convert_tree_ionname_to_simple_ionname_sn": "12_benchmarking.ipynb",
         "convert_tree_ionname_to_simple_ionname_diann": "12_benchmarking.ipynb",
         "filter_score_from_original_df": "12_benchmarking.ipynb",
         "filter_top_percentile_reference_df": "12_benchmarking.ipynb",
         "read_reformat_filtered_df": "12_benchmarking.ipynb",
         "load_tree_assign_predscores": "12_benchmarking.ipynb",
         "benchmark_configs_and_datasets": "12_benchmarking.ipynb",
         "intersect_with_diann": "12_benchmarking.ipynb",
         "get_benchmark_setting_name": "12_benchmarking.ipynb",
         "predscore_cutoff": "12_benchmarking.ipynb",
         "ResultsTable": "12_benchmarking.ipynb",
         "ResultsTableSpectronaut": "12_benchmarking.ipynb",
         "ResultsTableAlphaQuant": "12_benchmarking.ipynb",
         "MergedResultsTable": "12_benchmarking.ipynb",
         "SpeciesAnnotator": "12_benchmarking.ipynb",
         "ClassificationBenchmarker": "12_benchmarking.ipynb"}

modules = ["diff_analysis_manager.py",
           "normalization.py",
           "background_distributions.py",
           "diff_analysis.py",
           "visualizations.py",
           "diffquant_utils.py",
           "ptmsite_mapping.py",
           "doublediff_analysis.py",
           "cluster_ions.py",
           "classify_ions.py",
           "benchmarking.py"]

doc_url = "https://ammarcsj.github.io/alphaquant/"

git_url = "https://github.com/ammarcsj/alphaquant/tree/master/"

def custom_doc_links(name): return None
